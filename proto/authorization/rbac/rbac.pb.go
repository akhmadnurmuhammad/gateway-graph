// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: proto/authorization/rbac/rbac.proto

package rbac

import (
	reflect "reflect"
	sync "sync"
	permission "xti-gateway-graph-go/proto/authorization/permission"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FetchRequestRBAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	RoleID string `protobuf:"bytes,3,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
}

func (x *FetchRequestRBAC) Reset() {
	*x = FetchRequestRBAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchRequestRBAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRequestRBAC) ProtoMessage() {}

func (x *FetchRequestRBAC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRequestRBAC.ProtoReflect.Descriptor instead.
func (*FetchRequestRBAC) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{0}
}

func (x *FetchRequestRBAC) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FetchRequestRBAC) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FetchRequestRBAC) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

type MainResponseRBAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool          `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	Message   string        `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Status    int64         `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Data      *RBACResponse `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *MainResponseRBAC) Reset() {
	*x = MainResponseRBAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainResponseRBAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainResponseRBAC) ProtoMessage() {}

func (x *MainResponseRBAC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainResponseRBAC.ProtoReflect.Descriptor instead.
func (*MainResponseRBAC) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{1}
}

func (x *MainResponseRBAC) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *MainResponseRBAC) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MainResponseRBAC) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MainResponseRBAC) GetData() *RBACResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type FetchResponseRBAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool           `protobuf:"varint,1,opt,name=IsSuccess,proto3" json:"IsSuccess,omitempty"`
	Message   string         `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Status    int64          `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Data      *RBACResponses `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *FetchResponseRBAC) Reset() {
	*x = FetchResponseRBAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchResponseRBAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchResponseRBAC) ProtoMessage() {}

func (x *FetchResponseRBAC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchResponseRBAC.ProtoReflect.Descriptor instead.
func (*FetchResponseRBAC) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{2}
}

func (x *FetchResponseRBAC) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *FetchResponseRBAC) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FetchResponseRBAC) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FetchResponseRBAC) GetData() *RBACResponses {
	if x != nil {
		return x.Data
	}
	return nil
}

type RBACResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RBACResponse `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (x *RBACResponses) Reset() {
	*x = RBACResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBACResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBACResponses) ProtoMessage() {}

func (x *RBACResponses) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBACResponses.ProtoReflect.Descriptor instead.
func (*RBACResponses) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{3}
}

func (x *RBACResponses) GetItems() []*RBACResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type RBACRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string                                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	RoleID     string                                 `protobuf:"bytes,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	RoleName   string                                 `protobuf:"bytes,3,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	CreatedBy  string                                 `protobuf:"bytes,4,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty"`
	UpdateBy   string                                 `protobuf:"bytes,5,opt,name=UpdateBy,proto3" json:"UpdateBy,omitempty"`
	CreatedAt  string                                 `protobuf:"bytes,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdateAt   string                                 `protobuf:"bytes,7,opt,name=UpdateAt,proto3" json:"UpdateAt,omitempty"`
	Permission []*permission.PermissionDetailResponse `protobuf:"bytes,8,rep,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *RBACRoles) Reset() {
	*x = RBACRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBACRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBACRoles) ProtoMessage() {}

func (x *RBACRoles) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBACRoles.ProtoReflect.Descriptor instead.
func (*RBACRoles) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{4}
}

func (x *RBACRoles) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *RBACRoles) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

func (x *RBACRoles) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RBACRoles) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *RBACRoles) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *RBACRoles) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RBACRoles) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *RBACRoles) GetPermission() []*permission.PermissionDetailResponse {
	if x != nil {
		return x.Permission
	}
	return nil
}

type RBACResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Application []*RBACApplication `protobuf:"bytes,1,rep,name=Application,proto3" json:"Application,omitempty"`
}

func (x *RBACResponse) Reset() {
	*x = RBACResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBACResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBACResponse) ProtoMessage() {}

func (x *RBACResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBACResponse.ProtoReflect.Descriptor instead.
func (*RBACResponse) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{5}
}

func (x *RBACResponse) GetApplication() []*RBACApplication {
	if x != nil {
		return x.Application
	}
	return nil
}

type RBACApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string     `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name          string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Icon          string     `protobuf:"bytes,3,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Status        string     `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	AccessControl *RBACRoles `protobuf:"bytes,5,opt,name=AccessControl,proto3" json:"AccessControl,omitempty"`
}

func (x *RBACApplication) Reset() {
	*x = RBACApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBACApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBACApplication) ProtoMessage() {}

func (x *RBACApplication) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBACApplication.ProtoReflect.Descriptor instead.
func (*RBACApplication) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{6}
}

func (x *RBACApplication) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *RBACApplication) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RBACApplication) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RBACApplication) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RBACApplication) GetAccessControl() *RBACRoles {
	if x != nil {
		return x.AccessControl
	}
	return nil
}

type RBACRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string                   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name            string                   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	ApplicationID   string                   `protobuf:"bytes,3,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	ApplicationName string                   `protobuf:"bytes,4,opt,name=ApplicationName,proto3" json:"ApplicationName,omitempty"`
	RoleID          string                   `protobuf:"bytes,5,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	RoleName        string                   `protobuf:"bytes,6,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	Permissions     []*RBACPermissionRequest `protobuf:"bytes,7,rep,name=Permissions,proto3" json:"Permissions,omitempty"`
}

func (x *RBACRequest) Reset() {
	*x = RBACRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBACRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBACRequest) ProtoMessage() {}

func (x *RBACRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBACRequest.ProtoReflect.Descriptor instead.
func (*RBACRequest) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{7}
}

func (x *RBACRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *RBACRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RBACRequest) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *RBACRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *RBACRequest) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

func (x *RBACRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RBACRequest) GetPermissions() []*RBACPermissionRequest {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type RBACPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionID string `protobuf:"bytes,1,opt,name=PermissionID,proto3" json:"PermissionID,omitempty"`
}

func (x *RBACPermissionRequest) Reset() {
	*x = RBACPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBACPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBACPermissionRequest) ProtoMessage() {}

func (x *RBACPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBACPermissionRequest.ProtoReflect.Descriptor instead.
func (*RBACPermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{8}
}

func (x *RBACPermissionRequest) GetPermissionID() string {
	if x != nil {
		return x.PermissionID
	}
	return ""
}

type FindByIDRBACRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID string `protobuf:"bytes,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
}

func (x *FindByIDRBACRequest) Reset() {
	*x = FindByIDRBACRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindByIDRBACRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByIDRBACRequest) ProtoMessage() {}

func (x *FindByIDRBACRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_authorization_rbac_rbac_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByIDRBACRequest.ProtoReflect.Descriptor instead.
func (*FindByIDRBACRequest) Descriptor() ([]byte, []int) {
	return file_proto_authorization_rbac_rbac_proto_rawDescGZIP(), []int{9}
}

func (x *FindByIDRBACRequest) GetRoleID() string {
	if x != nil {
		return x.RoleID
	}
	return ""
}

var File_proto_authorization_rbac_rbac_proto protoreflect.FileDescriptor

var file_proto_authorization_rbac_rbac_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x62, 0x61, 0x63, 0x1a, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x58, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x42, 0x41, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x4d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x42, 0x41, 0x43, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x42, 0x41, 0x43, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x62,
	0x61, 0x63, 0x2e, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x0d, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x42,
	0x41, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x89, 0x02, 0x0a, 0x09, 0x52, 0x42, 0x41, 0x43, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a,
	0x0c, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x42, 0x41, 0x43, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x52, 0x42, 0x41, 0x43, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x0d, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x42, 0x41, 0x43, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x22, 0xf4, 0x01, 0x0a, 0x0b, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x42, 0x41, 0x43, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3b, 0x0a, 0x15, 0x52, 0x42, 0x41, 0x43,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x44, 0x32, 0x98, 0x02, 0x0a, 0x04, 0x52, 0x42, 0x41, 0x43, 0x12, 0x59, 0x0a,
	0x05, 0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x42, 0x41, 0x43, 0x1a, 0x17,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x42, 0x41, 0x43, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12,
	0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x72, 0x62,
	0x61, 0x63, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x12, 0x56, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x11, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x4d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x42, 0x41, 0x43, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x5d, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x72, 0x62, 0x61,
	0x63, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x4d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x42, 0x41, 0x43, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42,
	0x29, 0x5a, 0x27, 0x78, 0x74, 0x69, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2d, 0x67,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_authorization_rbac_rbac_proto_rawDescOnce sync.Once
	file_proto_authorization_rbac_rbac_proto_rawDescData = file_proto_authorization_rbac_rbac_proto_rawDesc
)

func file_proto_authorization_rbac_rbac_proto_rawDescGZIP() []byte {
	file_proto_authorization_rbac_rbac_proto_rawDescOnce.Do(func() {
		file_proto_authorization_rbac_rbac_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_authorization_rbac_rbac_proto_rawDescData)
	})
	return file_proto_authorization_rbac_rbac_proto_rawDescData
}

var file_proto_authorization_rbac_rbac_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_authorization_rbac_rbac_proto_goTypes = []interface{}{
	(*FetchRequestRBAC)(nil),                    // 0: rbac.FetchRequestRBAC
	(*MainResponseRBAC)(nil),                    // 1: rbac.MainResponseRBAC
	(*FetchResponseRBAC)(nil),                   // 2: rbac.FetchResponseRBAC
	(*RBACResponses)(nil),                       // 3: rbac.RBACResponses
	(*RBACRoles)(nil),                           // 4: rbac.RBACRoles
	(*RBACResponse)(nil),                        // 5: rbac.RBACResponse
	(*RBACApplication)(nil),                     // 6: rbac.RBACApplication
	(*RBACRequest)(nil),                         // 7: rbac.RBACRequest
	(*RBACPermissionRequest)(nil),               // 8: rbac.RBACPermissionRequest
	(*FindByIDRBACRequest)(nil),                 // 9: rbac.FindByIDRBACRequest
	(*permission.PermissionDetailResponse)(nil), // 10: permission.PermissionDetailResponse
}
var file_proto_authorization_rbac_rbac_proto_depIdxs = []int32{
	5,  // 0: rbac.MainResponseRBAC.Data:type_name -> rbac.RBACResponse
	3,  // 1: rbac.FetchResponseRBAC.Data:type_name -> rbac.RBACResponses
	5,  // 2: rbac.RBACResponses.Items:type_name -> rbac.RBACResponse
	10, // 3: rbac.RBACRoles.Permission:type_name -> permission.PermissionDetailResponse
	6,  // 4: rbac.RBACResponse.Application:type_name -> rbac.RBACApplication
	4,  // 5: rbac.RBACApplication.AccessControl:type_name -> rbac.RBACRoles
	8,  // 6: rbac.RBACRequest.Permissions:type_name -> rbac.RBACPermissionRequest
	0,  // 7: rbac.RBAC.Fetch:input_type -> rbac.FetchRequestRBAC
	7,  // 8: rbac.RBAC.Store:input_type -> rbac.RBACRequest
	9,  // 9: rbac.RBAC.Detail:input_type -> rbac.FindByIDRBACRequest
	2,  // 10: rbac.RBAC.Fetch:output_type -> rbac.FetchResponseRBAC
	1,  // 11: rbac.RBAC.Store:output_type -> rbac.MainResponseRBAC
	1,  // 12: rbac.RBAC.Detail:output_type -> rbac.MainResponseRBAC
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_authorization_rbac_rbac_proto_init() }
func file_proto_authorization_rbac_rbac_proto_init() {
	if File_proto_authorization_rbac_rbac_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_authorization_rbac_rbac_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchRequestRBAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainResponseRBAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchResponseRBAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBACResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBACRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBACResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBACApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBACRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBACPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_authorization_rbac_rbac_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindByIDRBACRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_authorization_rbac_rbac_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_authorization_rbac_rbac_proto_goTypes,
		DependencyIndexes: file_proto_authorization_rbac_rbac_proto_depIdxs,
		MessageInfos:      file_proto_authorization_rbac_rbac_proto_msgTypes,
	}.Build()
	File_proto_authorization_rbac_rbac_proto = out.File
	file_proto_authorization_rbac_rbac_proto_rawDesc = nil
	file_proto_authorization_rbac_rbac_proto_goTypes = nil
	file_proto_authorization_rbac_rbac_proto_depIdxs = nil
}
